{"version":3,"sources":["node_modules/react-dom/lib/dangerousStyleValue.js"],"names":["CSSProperty","require","warning","isUnitlessNumber","styleWarnings","dangerousStyleValue","name","value","component","isCustomProperty","isEmpty","isNonNumeric","isNaN","hasOwnProperty","process","env","NODE_ENV","owner","_currentElement","_owner","ownerName","getName","warned","warnings","type","trim","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AACA,IAAIC,UAAUD,QAAQ,kBAAR,CAAd;;AAEA,IAAIE,mBAAmBH,YAAYG,gBAAnC;AACA,IAAIC,gBAAgB,EAApB;;AAEA;;;;;;;;;;AAUA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,KAAnC,EAA0CC,SAA1C,EAAqDC,gBAArD,EAAuE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,UAAUH,SAAS,IAAT,IAAiB,OAAOA,KAAP,KAAiB,SAAlC,IAA+CA,UAAU,EAAvE;AACA,MAAIG,OAAJ,EAAa;AACX,WAAO,EAAP;AACD;;AAED,MAAIC,eAAeC,MAAML,KAAN,CAAnB;AACA,MAAIE,oBAAoBE,YAApB,IAAoCJ,UAAU,CAA9C,IAAmDJ,iBAAiBU,cAAjB,CAAgCP,IAAhC,KAAyCH,iBAAiBG,IAAjB,CAAhG,EAAwH;AACtH,WAAO,KAAKC,KAAZ,CADsH,CACnG;AACpB;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAIO,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA;AACA,UAAIR,aAAaD,UAAU,GAA3B,EAAgC;AAC9B,YAAIU,QAAQT,UAAUU,eAAV,CAA0BC,MAAtC;AACA,YAAIC,YAAYH,QAAQA,MAAMI,OAAN,EAAR,GAA0B,IAA1C;AACA,YAAID,aAAa,CAAChB,cAAcgB,SAAd,CAAlB,EAA4C;AAC1ChB,wBAAcgB,SAAd,IAA2B,EAA3B;AACD;AACD,YAAIE,SAAS,KAAb;AACA,YAAIF,SAAJ,EAAe;AACb,cAAIG,WAAWnB,cAAcgB,SAAd,CAAf;AACAE,mBAASC,SAASjB,IAAT,CAAT;AACA,cAAI,CAACgB,MAAL,EAAa;AACXC,qBAASjB,IAAT,IAAiB,IAAjB;AACD;AACF;AACD,YAAI,CAACgB,MAAL,EAAa;AACXR,kBAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCd,QAAQ,KAAR,EAAe,gEAAgE,4DAAhE,GAA+H,oDAA9I,EAAoMM,UAAUU,eAAV,CAA0BM,IAA9N,EAAoOJ,aAAa,SAAjP,EAA4Pd,IAA5P,EAAkQC,KAAlQ,CAAxC,GAAmT,KAAK,CAAxT;AACD;AACF;AACF;AACDA,YAAQA,MAAMkB,IAAN,EAAR;AACD;AACD,SAAOlB,QAAQ,IAAf;AACD;;AAEDmB,OAAOC,OAAP,GAAiBtB,mBAAjB","file":"dangerousStyleValue.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component, isCustomProperty) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;"]}