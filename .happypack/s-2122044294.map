{"version":3,"sources":["node_modules/create-react-class/factory.js"],"names":["_assign","require","emptyObject","_invariant","process","env","NODE_ENV","warning","MIXINS_KEY","identity","fn","ReactPropTypeLocationNames","prop","context","childContext","factory","ReactComponent","isValidElement","ReactNoopUpdateQueue","injectedMixins","ReactClassInterface","mixins","statics","propTypes","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","RESERVED_SPEC_KEYS","displayName","Constructor","i","length","mixSpecIntoComponent","validateTypeDef","createMergedResultFunction","mixStaticSpecIntoComponent","autobind","typeDef","location","propName","hasOwnProperty","validateMethodOverride","isAlreadyDefined","name","specPolicy","ReactClassMixin","spec","typeofSpec","isMixinValid","proto","prototype","autoBindPairs","__reactAutoBindPairs","property","isReactClassMethod","isFunction","shouldAutoBind","push","createChainedFunction","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","key","undefined","mergedResult","a","apply","arguments","b","c","chainedFunction","bindAutoBindMethod","component","method","boundMethod","bind","__reactBoundContext","__reactBoundMethod","__reactBoundArguments","componentName","constructor","_bind","newThis","_len","args","Array","_key","reboundMethod","bindAutoBindMethods","pairs","autoBindKey","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","callback","updater","enqueueReplaceState","isMounted","__didWarnIsMounted","ReactClassComponent","createClass","props","refs","state","initialState","_isMockFunction","isArray","forEach","defaultProps","isReactClassApproved","componentShouldUpdate","componentWillRecieveProps","methodName","module","exports"],"mappings":"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","file":"factory.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar _invariant = require('fbjs/lib/invariant');\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isInherited = name in Constructor;\n      _invariant(\n        !isInherited,\n        'ReactClass: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be ' +\n          'due to a mixin.',\n        name\n      );\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n"]}