{"version":3,"sources":["node_modules/react-dom/lib/ReactComponentEnvironment.js"],"names":["_prodInvariant","require","invariant","injected","ReactComponentEnvironment","replaceNodeWithMarkup","processChildrenUpdates","injection","injectEnvironment","environment","process","env","NODE_ENV","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAWA;;AAEA,IAAIA,iBAAiBC,QAAQ,sBAAR,CAArB;;AAEA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;;AAEA,IAAIE,WAAW,KAAf;;AAEA,IAAIC,4BAA4B;AAC9B;;;;AAIAC,yBAAuB,IALO;;AAO9B;;;;AAIAC,0BAAwB,IAXM;;AAa9BC,aAAW;AACTC,uBAAmB,2BAAUC,WAAV,EAAuB;AACxC,OAAC,CAACN,QAAF,GAAaO,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,UAAU,KAAV,EAAiB,uEAAjB,CAAxC,GAAoIF,eAAe,KAAf,CAAjJ,GAAyK,KAAK,CAA9K;AACAI,gCAA0BC,qBAA1B,GAAkDI,YAAYJ,qBAA9D;AACAD,gCAA0BE,sBAA1B,GAAmDG,YAAYH,sBAA/D;AACAH,iBAAW,IAAX;AACD;AANQ;AAbmB,CAAhC;;AAuBAU,OAAOC,OAAP,GAAiBV,yBAAjB","file":"ReactComponentEnvironment.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n};\n\nmodule.exports = ReactComponentEnvironment;"]}