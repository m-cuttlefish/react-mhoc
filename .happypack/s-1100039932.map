{"version":3,"sources":["node_modules/fbjs/lib/getUnboundedScrollPosition.js"],"names":["getUnboundedScrollPosition","scrollable","Window","x","pageXOffset","document","documentElement","scrollLeft","y","pageYOffset","scrollTop","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAWA;;AAEA;;;;;;;;;;;AAWA,SAASA,0BAAT,CAAoCC,UAApC,EAAgD;AAC9C,MAAIA,WAAWC,MAAX,IAAqBD,sBAAsBA,WAAWC,MAA1D,EAAkE;AAChE,WAAO;AACLC,SAAGF,WAAWG,WAAX,IAA0BH,WAAWI,QAAX,CAAoBC,eAApB,CAAoCC,UAD5D;AAELC,SAAGP,WAAWQ,WAAX,IAA0BR,WAAWI,QAAX,CAAoBC,eAApB,CAAoCI;AAF5D,KAAP;AAID;AACD,SAAO;AACLP,OAAGF,WAAWM,UADT;AAELC,OAAGP,WAAWS;AAFT,GAAP;AAID;;AAEDC,OAAOC,OAAP,GAAiBZ,0BAAjB","file":"getUnboundedScrollPosition.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    return {\n      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;"]}