{"version":3,"sources":["node_modules/react-dom/lib/ReactChildReconciler.js"],"names":["ReactReconciler","require","instantiateReactComponent","KeyEscapeUtils","shouldUpdateReactComponent","traverseAllChildren","warning","ReactComponentTreeHook","process","env","NODE_ENV","instantiateChild","childInstances","child","name","selfDebugID","keyUnique","undefined","unescape","getStackAddendumByID","ReactChildReconciler","instantiateChildren","nestedChildNodes","transaction","context","childInsts","updateChildren","prevChildren","nextChildren","mountImages","removedNodes","hostParent","hostContainerInfo","prevChild","hasOwnProperty","prevElement","_currentElement","nextElement","receiveComponent","getHostNode","unmountComponent","nextChildInstance","nextChildMountImage","mountComponent","push","unmountChildren","renderedChildren","safely","renderedChild","module","exports"],"mappings":"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","file":"ReactChildReconciler.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots\n  {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n        return instantiateChild(childInsts, child, name, selfDebugID);\n      }, childInstances);\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots\n  {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(prevChild, false);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n        mountImages.push(nextChildMountImage);\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(prevChild, false);\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren, safely) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely);\n      }\n    }\n  }\n};\n\nmodule.exports = ReactChildReconciler;"]}