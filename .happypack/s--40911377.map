{"version":3,"sources":["node_modules/react/lib/KeyEscapeUtils.js"],"names":["escape","key","escapeRegex","escaperLookup","escapedString","replace","match","unescape","unescapeRegex","unescaperLookup","keySubstring","substring","KeyEscapeUtils","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAWA;;AAEA;;;;;;;AAOA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,MAAIC,cAAc,OAAlB;AACA,MAAIC,gBAAgB;AAClB,SAAK,IADa;AAElB,SAAK;AAFa,GAApB;AAIA,MAAIC,gBAAgB,CAAC,KAAKH,GAAN,EAAWI,OAAX,CAAmBH,WAAnB,EAAgC,UAAUI,KAAV,EAAiB;AACnE,WAAOH,cAAcG,KAAd,CAAP;AACD,GAFmB,CAApB;;AAIA,SAAO,MAAMF,aAAb;AACD;;AAED;;;;;;AAMA,SAASG,QAAT,CAAkBN,GAAlB,EAAuB;AACrB,MAAIO,gBAAgB,UAApB;AACA,MAAIC,kBAAkB;AACpB,UAAM,GADc;AAEpB,UAAM;AAFc,GAAtB;AAIA,MAAIC,eAAeT,IAAI,CAAJ,MAAW,GAAX,IAAkBA,IAAI,CAAJ,MAAW,GAA7B,GAAmCA,IAAIU,SAAJ,CAAc,CAAd,CAAnC,GAAsDV,IAAIU,SAAJ,CAAc,CAAd,CAAzE;;AAEA,SAAO,CAAC,KAAKD,YAAN,EAAoBL,OAApB,CAA4BG,aAA5B,EAA2C,UAAUF,KAAV,EAAiB;AACjE,WAAOG,gBAAgBH,KAAhB,CAAP;AACD,GAFM,CAAP;AAGD;;AAED,IAAIM,iBAAiB;AACnBZ,UAAQA,MADW;AAEnBO,YAAUA;AAFS,CAArB;;AAKAM,OAAOC,OAAP,GAAiBF,cAAjB","file":"KeyEscapeUtils.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;"]}