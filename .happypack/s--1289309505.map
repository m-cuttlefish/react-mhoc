{"version":3,"sources":["node_modules/react-dom/lib/SyntheticMouseEvent.js"],"names":["SyntheticUIEvent","require","ViewportMetrics","getEventModifierState","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","event","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","SyntheticMouseEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","call","augmentClass","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,mBAAmBC,QAAQ,oBAAR,CAAvB;AACA,IAAIC,kBAAkBD,QAAQ,mBAAR,CAAtB;;AAEA,IAAIE,wBAAwBF,QAAQ,yBAAR,CAA5B;;AAEA;;;;AAIA,IAAIG,sBAAsB;AACxBC,WAAS,IADe;AAExBC,WAAS,IAFe;AAGxBC,WAAS,IAHe;AAIxBC,WAAS,IAJe;AAKxBC,WAAS,IALe;AAMxBC,YAAU,IANc;AAOxBC,UAAQ,IAPgB;AAQxBC,WAAS,IARe;AASxBC,oBAAkBV,qBATM;AAUxBW,UAAQ,gBAAUC,KAAV,EAAiB;AACvB;AACA;AACA;AACA,QAAID,SAASC,MAAMD,MAAnB;AACA,QAAI,WAAWC,KAAf,EAAsB;AACpB,aAAOD,MAAP;AACD;AACD;AACA;AACA;AACA;AACA,WAAOA,WAAW,CAAX,GAAe,CAAf,GAAmBA,WAAW,CAAX,GAAe,CAAf,GAAmB,CAA7C;AACD,GAvBuB;AAwBxBE,WAAS,IAxBe;AAyBxBC,iBAAe,uBAAUF,KAAV,EAAiB;AAC9B,WAAOA,MAAME,aAAN,KAAwBF,MAAMG,WAAN,KAAsBH,MAAMI,UAA5B,GAAyCJ,MAAMK,SAA/C,GAA2DL,MAAMG,WAAzF,CAAP;AACD,GA3BuB;AA4BxB;AACAG,SAAO,eAAUN,KAAV,EAAiB;AACtB,WAAO,WAAWA,KAAX,GAAmBA,MAAMM,KAAzB,GAAiCN,MAAMR,OAAN,GAAgBL,gBAAgBoB,iBAAxE;AACD,GA/BuB;AAgCxBC,SAAO,eAAUR,KAAV,EAAiB;AACtB,WAAO,WAAWA,KAAX,GAAmBA,MAAMQ,KAAzB,GAAiCR,MAAMP,OAAN,GAAgBN,gBAAgBsB,gBAAxE;AACD;AAlCuB,CAA1B;;AAqCA;;;;;;AAMA,SAASC,mBAAT,CAA6BC,cAA7B,EAA6CC,cAA7C,EAA6DC,WAA7D,EAA0EC,iBAA1E,EAA6F;AAC3F,SAAO7B,iBAAiB8B,IAAjB,CAAsB,IAAtB,EAA4BJ,cAA5B,EAA4CC,cAA5C,EAA4DC,WAA5D,EAAyEC,iBAAzE,CAAP;AACD;;AAED7B,iBAAiB+B,YAAjB,CAA8BN,mBAA9B,EAAmDrB,mBAAnD;;AAEA4B,OAAOC,OAAP,GAAiBR,mBAAjB","file":"SyntheticMouseEvent.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;"]}