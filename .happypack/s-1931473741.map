{"version":3,"sources":["node_modules/react-dom/lib/EventPluginHub.js"],"names":["_prodInvariant","require","EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","invariant","listenerBank","eventQueue","executeDispatchesAndRelease","event","simulated","executeDispatchesInOrder","isPersistent","constructor","release","executeDispatchesAndReleaseSimulated","e","executeDispatchesAndReleaseTopLevel","getDictionaryKey","inst","_rootNodeID","isInteractive","tag","shouldPreventMouseEvent","name","type","props","disabled","EventPluginHub","injection","injectEventPluginOrder","injectEventPluginsByName","putListener","registrationName","listener","process","env","NODE_ENV","key","bankForRegistrationName","PluginModule","registrationNameModules","didPutListener","getListener","_currentElement","deleteListener","willDeleteListener","deleteAllListeners","hasOwnProperty","extractEvents","topLevelType","targetInst","nativeEvent","nativeEventTarget","events","plugins","i","length","possiblePlugin","extractedEvents","enqueueEvents","processEventQueue","processingEventQueue","rethrowCaughtError","__purge","__getListenerBank","module","exports"],"mappings":"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","file":"EventPluginHub.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n      return null;\n    }\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n};\n\nmodule.exports = EventPluginHub;"]}