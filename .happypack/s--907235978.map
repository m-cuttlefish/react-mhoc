{"version":3,"sources":["lib/debug.js"],"names":["stringify","debug","replacer","opt","key","value","functionDetail","toString","name","JSON","bind","debugOrigin","WrappedComponent","options","infoDown","renderInfo","padding","border","borderRadius","renderProps","renderState","props","state","classOrOpt"],"mappings":";;;;;;;;;;QAegBA,S,GAAAA,S;kBA0DQC,K;;AAzExB;;;;AACA;;;;;;;;;;;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,KAA5B,EAAmC;AAC/B,QAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC7B,YAAIF,IAAIG,cAAR,EAAwB;AACpB,mBAAOD,MAAME,QAAN,EAAP;AACH,SAFD,MAEO;AACH,iCAAmBF,MAAMG,IAAzB;AACH;AACJ;;AAED,WAAOH,KAAP;AACH;;AAEM,SAASL,SAAT,CAAmBK,KAAnB,EAA0BF,GAA1B,EAA+B;AAClC,WAAOM,KAAKT,SAAL,CAAeK,KAAf,EAAsBH,SAASQ,IAAT,CAAc,IAAd,EAAoBP,GAApB,CAAtB,EAAgD,CAAhD,CAAP;AACH;;AAED,SAASQ,WAAT,CAAqBC,gBAArB,EAAqD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AACjD,QAAIP,iBAAiB,oBAAoBO,OAApB,GAA8BA,QAAQP,cAAtC,GAAuD,KAA5E;AACA,QAAIQ,WAAW,cAAcD,OAAd,GAAwBA,QAAQC,QAAhC,GAA2C,KAA1D;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,qCAEa;AAAA;;AAEL,oBAAIC,aAAa,SAAbA,UAAa,GAAM;AACnB,2BACI;AAAA;AAAA,0BAAK,OAAO,EAACC,SAAS,KAAV,EAAiBC,QAAQ,gBAAzB,EAA2CC,cAAc,CAAzD,EAAZ;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAIK,yBAACJ,QAAD,GAAYK,aAAZ,GAA4BC,aAJjC;AAKK,yBAACN,QAAD,GAAYM,aAAZ,GAA4BD;AALjC,qBADJ;AASH,iBAVD;;AAYA,oBAAIA,cAAc,SAAdA,WAAc,GAAM;AACpB,2BACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAII;AAAA;AAAA;AAAMnB,sCAAU,OAAKqB,KAAf,EAAsB,EAACf,8BAAD,EAAtB;AAAN;AAJJ,qBADJ;AAQH,iBATD;;AAWA,oBAAIc,cAAc,SAAdA,WAAc,GAAM;AACpB,2BACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,yBADJ;AAII;AAAA;AAAA;AAAMpB,sCAAU,OAAKsB,KAAf,EAAsB,EAAChB,8BAAD,EAAtB;AAAN;AAJJ,qBADJ;AAQH,iBATD;;AAaA,uBACI;AAAA;AAAA;AACK,qBAACQ,QAAD,IAAaC,YADlB;AAAA;AAGKD,gCAAYC;AAHjB,iBADJ;AAOH;AA/CL;;AAAA;AAAA,MAAoCH,gBAApC;AAiDH;;AAEc,SAASX,KAAT,CAAesB,UAAf,EAA2B;;AAEtC,QAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AAClC,eAAOZ,YAAYY,UAAZ,CAAP;AACH,KAFD,MAEO;AACH,eAAO;AAAA,mBAAoBZ,YAAYC,gBAAZ,EAA8BW,UAA9B,CAApB;AAAA,SAAP;AACH;AACJ;;AAED","file":"debug.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nfunction replacer(opt, key, value) {\n    if (typeof value === 'function') {\n        if (opt.functionDetail) {\n            return value.toString()\n        } else {\n            return `function ${value.name}() {...}`\n        }\n    }\n\n    return value\n}\n\nexport function stringify(value, opt) {\n    return JSON.stringify(value, replacer.bind(null, opt), 2)\n}\n\nfunction debugOrigin(WrappedComponent, options = {}) {\n    let functionDetail = 'functionDetail' in options ? options.functionDetail : false\n    let infoDown = 'infoDown' in options ? options.infoDown : false\n    return class DebugComponent extends WrappedComponent {\n\n        render() {\n\n            let renderInfo = () => {\n                return (\n                    <div style={{padding: '5px', border: '1px solid #ddd', borderRadius: 5}}>\n                        <h4>\n                            HOC Debugger Component\n                        </h4>\n                        {!infoDown ? renderProps() : renderState()}\n                        {!infoDown ? renderState() : renderProps()}\n                    </div>\n                )\n            }\n\n            let renderProps = () => {\n                return (\n                    <div>\n                        <p>\n                            Props\n                        </p>\n                        <pre>{stringify(this.props, {functionDetail})}</pre>\n                    </div>\n                )\n            }\n\n            let renderState = () => {\n                return (\n                    <div>\n                        <p>\n                            State\n                        </p>\n                        <pre>{stringify(this.state, {functionDetail})}</pre>\n                    </div>\n                )\n            }\n\n\n\n            return (\n                <div>\n                    {!infoDown && renderInfo()}\n                    {super.render()}\n                    {infoDown && renderInfo()}\n                </div>\n            )\n        }\n    }\n}\n\nexport default function debug(classOrOpt) {\n\n    if (typeof classOrOpt === 'function') {\n        return debugOrigin(classOrOpt)\n    } else {\n        return WrappedComponent => debugOrigin(WrappedComponent, classOrOpt)\n    }\n}\n\n/*\n @debug({functionDetail: true, infoDown: true})\n class Example extends React.Component {\n constructor(props) {\n super(props)\n this.state = {\n name: 'fran',\n email: 'franleplant@gmail.com'\n }\n }\n\n render() {\n return (\n <div>\n <h2>\n Wrapped Component\n </h2>\n <p>Im a wrapped component</p>\n </div>\n )\n }\n }\n\n const EnhancedExample = Example\n\n ReactDOM.render(<EnhancedExample date={(new Date).toISOString()} callback={function test() {alert(222)}}/>, document.getElementById('root'))\n*/\n"]}