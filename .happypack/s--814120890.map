{"version":3,"sources":["node_modules/prop-types/checkPropTypes.js"],"names":["process","env","NODE_ENV","invariant","require","warning","ReactPropTypesSecret","loggedTypeFailures","checkPropTypes","typeSpecs","values","location","componentName","getStack","typeSpecName","hasOwnProperty","error","ex","Error","message","stack","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;;;;AAEA,IAAIA,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAIC,YAAYC,QAAQ,oBAAR,CAAhB;AACA,MAAIC,UAAUD,QAAQ,kBAAR,CAAd;AACA,MAAIE,uBAAuBF,QAAQ,4BAAR,CAA3B;AACA,MAAIG,qBAAqB,EAAzB;AACD;;AAED;;;;;;;;;;;AAWA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,MAAnC,EAA2CC,QAA3C,EAAqDC,aAArD,EAAoEC,QAApE,EAA8E;AAC5E,MAAIb,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,SAAK,IAAIY,YAAT,IAAyBL,SAAzB,EAAoC;AAClC,UAAIA,UAAUM,cAAV,CAAyBD,YAAzB,CAAJ,EAA4C;AAC1C,YAAIE,KAAJ;AACA;AACA;AACA;AACA,YAAI;AACF;AACA;AACAb,oBAAU,OAAOM,UAAUK,YAAV,CAAP,KAAmC,UAA7C,EAAyD,sEAAsE,kBAA/H,EAAmJF,iBAAiB,aAApK,EAAmLD,QAAnL,EAA6LG,YAA7L;AACAE,kBAAQP,UAAUK,YAAV,EAAwBJ,MAAxB,EAAgCI,YAAhC,EAA8CF,aAA9C,EAA6DD,QAA7D,EAAuE,IAAvE,EAA6EL,oBAA7E,CAAR;AACD,SALD,CAKE,OAAOW,EAAP,EAAW;AACXD,kBAAQC,EAAR;AACD;AACDZ,gBAAQ,CAACW,KAAD,IAAUA,iBAAiBE,KAAnC,EAA0C,oEAAoE,+DAApE,GAAsI,iEAAtI,GAA0M,gEAA1M,GAA6Q,iCAAvT,EAA0VN,iBAAiB,aAA3W,EAA0XD,QAA1X,EAAoYG,YAApY,SAAyZE,KAAzZ,yCAAyZA,KAAzZ;AACA,YAAIA,iBAAiBE,KAAjB,IAA0B,EAAEF,MAAMG,OAAN,IAAiBZ,kBAAnB,CAA9B,EAAsE;AACpE;AACA;AACAA,6BAAmBS,MAAMG,OAAzB,IAAoC,IAApC;;AAEA,cAAIC,QAAQP,WAAWA,UAAX,GAAwB,EAApC;;AAEAR,kBAAQ,KAAR,EAAe,sBAAf,EAAuCM,QAAvC,EAAiDK,MAAMG,OAAvD,EAAgEC,SAAS,IAAT,GAAgBA,KAAhB,GAAwB,EAAxF;AACD;AACF;AACF;AACF;AACF;;AAEDC,OAAOC,OAAP,GAAiBd,cAAjB","file":"checkPropTypes.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n"]}