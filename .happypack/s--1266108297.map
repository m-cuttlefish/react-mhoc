{"version":3,"sources":["node_modules/react-dom/lib/isEventSupported.js"],"names":["ExecutionEnvironment","require","useHasFeature","canUseDOM","document","implementation","hasFeature","isEventSupported","eventNameSuffix","capture","eventName","isSupported","element","createElement","setAttribute","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,uBAAuBC,QAAQ,+BAAR,CAA3B;;AAEA,IAAIC,aAAJ;AACA,IAAIF,qBAAqBG,SAAzB,EAAoC;AAClCD,kBAAgBE,SAASC,cAAT,IAA2BD,SAASC,cAAT,CAAwBC,UAAnD;AAChB;AACA;AACAF,WAASC,cAAT,CAAwBC,UAAxB,CAAmC,EAAnC,EAAuC,EAAvC,MAA+C,IAH/C;AAID;;AAED;;;;;;;;;;;;;;AAcA,SAASC,gBAAT,CAA0BC,eAA1B,EAA2CC,OAA3C,EAAoD;AAClD,MAAI,CAACT,qBAAqBG,SAAtB,IAAmCM,WAAW,EAAE,sBAAsBL,QAAxB,CAAlD,EAAqF;AACnF,WAAO,KAAP;AACD;;AAED,MAAIM,YAAY,OAAOF,eAAvB;AACA,MAAIG,cAAcD,aAAaN,QAA/B;;AAEA,MAAI,CAACO,WAAL,EAAkB;AAChB,QAAIC,UAAUR,SAASS,aAAT,CAAuB,KAAvB,CAAd;AACAD,YAAQE,YAAR,CAAqBJ,SAArB,EAAgC,SAAhC;AACAC,kBAAc,OAAOC,QAAQF,SAAR,CAAP,KAA8B,UAA5C;AACD;;AAED,MAAI,CAACC,WAAD,IAAgBT,aAAhB,IAAiCM,oBAAoB,OAAzD,EAAkE;AAChE;AACAG,kBAAcP,SAASC,cAAT,CAAwBC,UAAxB,CAAmC,cAAnC,EAAmD,KAAnD,CAAd;AACD;;AAED,SAAOK,WAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBT,gBAAjB","file":"isEventSupported.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;"]}