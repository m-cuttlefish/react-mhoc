{"version":3,"sources":["node_modules/react-dom/lib/ReactDOMInput.js"],"names":["_prodInvariant","require","_assign","DOMPropertyOperations","LinkedValueUtils","ReactDOMComponentTree","ReactUpdates","invariant","warning","didWarnValueLink","didWarnCheckedLink","didWarnValueDefaultValue","didWarnCheckedDefaultChecked","didWarnControlledToUncontrolled","didWarnUncontrolledToControlled","forceUpdateIfMounted","_rootNodeID","ReactDOMInput","updateWrapper","isControlled","props","usesChecked","type","checked","value","getHostProps","inst","getValue","getChecked","hostProps","undefined","step","min","max","defaultChecked","defaultValue","_wrapperState","initialValue","initialChecked","onChange","mountWrapper","process","env","NODE_ENV","checkPropTypes","_currentElement","_owner","owner","valueLink","checkedLink","getName","listeners","_handleChange","bind","controlled","setValueForProperty","getNodeFromInstance","node","valueAsNumber","parseFloat","postMountWrapper","name","event","returnValue","executeOnChange","asap","rootNode","queryRoot","parentNode","group","querySelectorAll","JSON","stringify","i","length","otherNode","form","otherInstance","getInstanceFromNode","module","exports"],"mappings":"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","file":"ReactDOMInput.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnCheckedLink = false;\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getHostProps: function (inst, props) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var hostProps = _assign({\n      // Make sure we set .type before any other properties (setting .value\n      // before .type means .value is lost in IE11 and below)\n      type: undefined,\n      // Make sure we set .step before .value (setting .value before .step\n      // means .value is rounded on mount, based upon step precision)\n      step: undefined,\n      // Make sure we set .min & .max before .value (to ensure proper order\n      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n      min: undefined,\n      max: undefined\n    }, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\n      var owner = inst._currentElement._owner;\n\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnCheckedLink = true;\n      }\n      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnCheckedDefaultChecked = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnValueDefaultValue = true;\n      }\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n      initialValue: props.value != null ? props.value : defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      controlled: isControlled(props)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var controlled = isControlled(props);\n      var owner = inst._currentElement._owner;\n\n      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnUncontrolledToControlled = true;\n      }\n      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnControlledToUncontrolled = true;\n      }\n    }\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      if (value === 0 && node.value === '') {\n        node.value = '0';\n        // Note: IE9 reports a number inputs as 'text', so check props instead.\n      } else if (props.type === 'number') {\n        // Simulate `input.valueAsNumber`. IE9 does not support it\n        var valueAsNumber = parseFloat(node.value, 10) || 0;\n\n        if (\n        // eslint-disable-next-line\n        value != valueAsNumber ||\n        // eslint-disable-next-line\n        value == valueAsNumber && node.value != value) {\n          // Cast `value` to a string to ensure the value is set correctly. While\n          // browsers typically do this as necessary, jsdom doesn't.\n          node.value = '' + value;\n        }\n      } else if (node.value !== '' + value) {\n        // Cast `value` to a string to ensure the value is set correctly. While\n        // browsers typically do this as necessary, jsdom doesn't.\n        node.value = '' + value;\n      }\n    } else {\n      if (props.value == null && props.defaultValue != null) {\n        // In Chrome, assigning defaultValue to certain input types triggers input validation.\n        // For number inputs, the display value loses trailing decimal points. For email inputs,\n        // Chrome raises \"The specified value <x> is not a valid email address\".\n        //\n        // Here we check to see if the defaultValue has actually changed, avoiding these problems\n        // when the user is inputting text\n        //\n        // https://github.com/facebook/react/issues/7253\n        if (node.defaultValue !== '' + props.defaultValue) {\n          node.defaultValue = '' + props.defaultValue;\n        }\n      }\n      if (props.checked == null && props.defaultChecked != null) {\n        node.defaultChecked = !!props.defaultChecked;\n      }\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Detach value from defaultValue. We won't do anything if we're working on\n    // submit or reset inputs as those values & defaultValues are linked. They\n    // are not resetable nodes so this operation doesn't matter and actually\n    // removes browser-default values (eg \"Submit Query\") when no value is\n    // provided.\n\n    switch (props.type) {\n      case 'submit':\n      case 'reset':\n        break;\n      case 'color':\n      case 'date':\n      case 'datetime':\n      case 'datetime-local':\n      case 'month':\n      case 'time':\n      case 'week':\n        // This fixes the no-show issue on iOS Safari and Android Chrome:\n        // https://github.com/facebook/react/issues/7233\n        node.value = '';\n        node.value = node.defaultValue;\n        break;\n      default:\n        node.value = node.value;\n        break;\n    }\n\n    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n    // this is needed to work around a chrome bug where setting defaultChecked\n    // will sometimes influence the value of checked (even after detachment).\n    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n    // We need to temporarily unset name to avoid disrupting radio button groups.\n    var name = node.name;\n    if (name !== '') {\n      node.name = '';\n    }\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !node.defaultChecked;\n    if (name !== '') {\n      node.name = name;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;"]}