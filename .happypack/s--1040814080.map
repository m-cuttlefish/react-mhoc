{"version":3,"sources":["node_modules/react-dom/lib/getEventTarget.js"],"names":["getEventTarget","nativeEvent","target","srcElement","window","correspondingUseElement","nodeType","parentNode","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA;;;;;;;;AAQA,SAASA,cAAT,CAAwBC,WAAxB,EAAqC;AACnC,MAAIC,SAASD,YAAYC,MAAZ,IAAsBD,YAAYE,UAAlC,IAAgDC,MAA7D;;AAEA;AACA,MAAIF,OAAOG,uBAAX,EAAoC;AAClCH,aAASA,OAAOG,uBAAhB;AACD;;AAED;AACA;AACA,SAAOH,OAAOI,QAAP,KAAoB,CAApB,GAAwBJ,OAAOK,UAA/B,GAA4CL,MAAnD;AACD;;AAEDM,OAAOC,OAAP,GAAiBT,cAAjB","file":"getEventTarget.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;"]}