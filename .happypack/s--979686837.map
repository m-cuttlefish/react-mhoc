{"version":3,"sources":["node_modules/react-dom/lib/traverseAllChildren.js"],"names":["_prodInvariant","require","ReactCurrentOwner","REACT_ELEMENT_TYPE","getIteratorFn","invariant","KeyEscapeUtils","warning","SEPARATOR","SUBSEPARATOR","didWarnAboutMaps","getComponentKey","component","index","key","escape","toString","traverseAllChildrenImpl","children","nameSoFar","callback","traverseContext","type","$$typeof","child","nextName","subtreeCount","nextNamePrefix","Array","isArray","i","length","iteratorFn","iterator","call","step","entries","ii","next","done","value","process","env","NODE_ENV","mapsAsChildrenAddendum","current","mapsAsChildrenOwnerName","getName","entry","addendum","_isReactElement","name","childrenString","String","Object","keys","join","traverseAllChildren","module","exports"],"mappings":"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","file":"traverseAllChildren.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = \" It looks like you're using an element created by a different \" + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;"]}