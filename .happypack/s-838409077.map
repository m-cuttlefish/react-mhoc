{"version":3,"sources":["node_modules/react-dom/lib/SyntheticWheelEvent.js"],"names":["SyntheticMouseEvent","require","WheelEventInterface","deltaX","event","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","SyntheticWheelEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","call","augmentClass","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,sBAAsBC,QAAQ,uBAAR,CAA1B;;AAEA;;;;AAIA,IAAIC,sBAAsB;AACxBC,UAAQ,gBAAUC,KAAV,EAAiB;AACvB,WAAO,YAAYA,KAAZ,GAAoBA,MAAMD,MAA1B,GAAmC;AAC1C,qBAAiBC,KAAjB,GAAyB,CAACA,MAAMC,WAAhC,GAA8C,CAD9C;AAED,GAJuB;AAKxBC,UAAQ,gBAAUF,KAAV,EAAiB;AACvB,WAAO,YAAYA,KAAZ,GAAoBA,MAAME,MAA1B,GAAmC;AAC1C,qBAAiBF,KAAjB,GAAyB,CAACA,MAAMG,WAAhC,GAA8C;AAC9C,oBAAgBH,KAAhB,GAAwB,CAACA,MAAMI,UAA/B,GAA4C,CAF5C;AAGD,GATuB;AAUxBC,UAAQ,IAVgB;;AAYxB;AACA;AACA;AACA;AACAC,aAAW;AAhBa,CAA1B;;AAmBA;;;;;;AAMA,SAASC,mBAAT,CAA6BC,cAA7B,EAA6CC,cAA7C,EAA6DC,WAA7D,EAA0EC,iBAA1E,EAA6F;AAC3F,SAAOf,oBAAoBgB,IAApB,CAAyB,IAAzB,EAA+BJ,cAA/B,EAA+CC,cAA/C,EAA+DC,WAA/D,EAA4EC,iBAA5E,CAAP;AACD;;AAEDf,oBAAoBiB,YAApB,CAAiCN,mBAAjC,EAAsDT,mBAAtD;;AAEAgB,OAAOC,OAAP,GAAiBR,mBAAjB","file":"SyntheticWheelEvent.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;"]}