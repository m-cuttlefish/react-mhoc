{"version":3,"sources":["node_modules/react-dom/lib/shouldUpdateReactComponent.js"],"names":["shouldUpdateReactComponent","prevElement","nextElement","prevEmpty","nextEmpty","prevType","nextType","type","key","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA;;;;;;;;;;;;;;AAYA,SAASA,0BAAT,CAAoCC,WAApC,EAAiDC,WAAjD,EAA8D;AAC5D,MAAIC,YAAYF,gBAAgB,IAAhB,IAAwBA,gBAAgB,KAAxD;AACA,MAAIG,YAAYF,gBAAgB,IAAhB,IAAwBA,gBAAgB,KAAxD;AACA,MAAIC,aAAaC,SAAjB,EAA4B;AAC1B,WAAOD,cAAcC,SAArB;AACD;;AAED,MAAIC,kBAAkBJ,WAAlB,yCAAkBA,WAAlB,CAAJ;AACA,MAAIK,kBAAkBJ,WAAlB,yCAAkBA,WAAlB,CAAJ;AACA,MAAIG,aAAa,QAAb,IAAyBA,aAAa,QAA1C,EAAoD;AAClD,WAAOC,aAAa,QAAb,IAAyBA,aAAa,QAA7C;AACD,GAFD,MAEO;AACL,WAAOA,aAAa,QAAb,IAAyBL,YAAYM,IAAZ,KAAqBL,YAAYK,IAA1D,IAAkEN,YAAYO,GAAZ,KAAoBN,YAAYM,GAAzG;AACD;AACF;;AAEDC,OAAOC,OAAP,GAAiBV,0BAAjB","file":"shouldUpdateReactComponent.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n}\n\nmodule.exports = shouldUpdateReactComponent;"]}