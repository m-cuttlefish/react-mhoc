{"version":3,"sources":["node_modules/react-dom/lib/ReactDOMInvalidARIAHook.js"],"names":["DOMProperty","require","ReactComponentTreeHook","warning","warnedProperties","rARIA","RegExp","ATTRIBUTE_NAME_CHAR","validateProperty","tagName","name","debugID","hasOwnProperty","test","lowerCasedName","toLowerCase","standardName","getPossibleStandardName","process","env","NODE_ENV","getStackAddendumByID","warnInvalidARIAProps","element","invalidProps","key","props","isValid","type","push","unknownPropString","map","prop","join","length","handleElement","indexOf","is","ReactDOMInvalidARIAHook","onBeforeMountComponent","onBeforeUpdateComponent","module","exports"],"mappings":"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","file":"ReactDOMInvalidARIAHook.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nvar warnedProperties = {};\nvar rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\n\nfunction validateProperty(tagName, name, debugID) {\n  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n    return true;\n  }\n\n  if (rARIA.test(name)) {\n    var lowerCasedName = name.toLowerCase();\n    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (standardName == null) {\n      warnedProperties[name] = true;\n      return false;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== standardName) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(debugID, element) {\n  var invalidProps = [];\n\n  for (var key in element.props) {\n    var isValid = validateProperty(element.type, key, debugID);\n    if (!isValid) {\n      invalidProps.push(key);\n    }\n  }\n\n  var unknownPropString = invalidProps.map(function (prop) {\n    return '`' + prop + '`';\n  }).join(', ');\n\n  if (invalidProps.length === 1) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n  } else if (invalidProps.length > 1) {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n  }\n}\n\nfunction handleElement(debugID, element) {\n  if (element == null || typeof element.type !== 'string') {\n    return;\n  }\n  if (element.type.indexOf('-') >= 0 || element.props.is) {\n    return;\n  }\n\n  warnInvalidARIAProps(debugID, element);\n}\n\nvar ReactDOMInvalidARIAHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    if (process.env.NODE_ENV !== 'production') {\n      handleElement(debugID, element);\n    }\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    if (process.env.NODE_ENV !== 'production') {\n      handleElement(debugID, element);\n    }\n  }\n};\n\nmodule.exports = ReactDOMInvalidARIAHook;"]}