{"version":3,"sources":["node_modules/react-dom/lib/ReactMount.js"],"names":["_prodInvariant","require","DOMLazyTree","DOMProperty","React","ReactBrowserEventEmitter","ReactCurrentOwner","ReactDOMComponentTree","ReactDOMContainerInfo","ReactDOMFeatureFlags","ReactFeatureFlags","ReactInstanceMap","ReactInstrumentation","ReactMarkupChecksum","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","warning","ATTR_NAME","ID_ATTRIBUTE_NAME","ROOT_ATTR_NAME","ROOT_ATTRIBUTE_NAME","ELEMENT_NODE_TYPE","DOC_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","instancesByReactRootID","firstDifferenceIndex","string1","string2","minLen","Math","min","length","i","charAt","getReactRootElementInContainer","container","nodeType","documentElement","firstChild","internalGetID","node","getAttribute","mountComponentIntoNode","wrapperInstance","transaction","shouldReuseMarkup","context","markerName","logTopLevelRenders","wrappedElement","_currentElement","props","child","type","displayName","name","console","time","markup","mountComponent","timeEnd","_renderedComponent","_topLevelWrapper","ReactMount","_mountImageIntoNode","batchedMountComponentIntoNode","componentInstance","ReactReconcileTransaction","getPooled","useCreateElement","perform","release","unmountComponentFromNode","instance","safely","process","env","NODE_ENV","debugTool","onBeginFlush","unmountComponent","onEndFlush","lastChild","removeChild","hasNonRootReactChild","rootEl","inst","getInstanceFromNode","_hostParent","nodeIsRenderedByOtherInstance","isReactNode","isValidContainer","hasAttribute","getHostRootInstanceInContainer","prevHostInstance","getTopLevelWrapperInContainer","root","_hostContainerInfo","topLevelRootCounter","TopLevelWrapper","rootID","prototype","isReactComponent","render","isReactTopLevelWrapper","_instancesByReactRootID","scrollMonitor","renderCallback","_updateRootComponent","prevComponent","nextElement","nextContext","callback","enqueueElementInternal","enqueueCallbackInternal","_renderNewRootComponent","current","getName","ensureScrollValueMonitoring","batchedUpdates","wrapperID","_instance","renderSubtreeIntoContainer","parentComponent","has","_renderSubtreeIntoContainer","validateCallback","isValidElement","undefined","tagName","toUpperCase","nextWrappedElement","createElement","parentInst","get","_processChildContext","_context","prevWrappedElement","prevElement","publicInst","getPublicInstance","updatedCallback","call","unmountComponentAtNode","reactRootElement","containerHasReactMarkup","containerHasNonRootReactChild","nextSibling","rootElementSibling","component","isContainerReactRoot","rootElement","canReuseMarkup","precacheNode","checksum","CHECKSUM_ATTR_NAME","removeAttribute","rootMarkup","outerHTML","setAttribute","normalizedMarkup","normalizer","document","innerHTML","body","appendChild","contentDocument","write","diffIndex","difference","substring","insertTreeBefore","hostNode","_debugID","onHostOperation","instanceID","payload","toString","module","exports"],"mappings":"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","file":"ReactMount.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar React = require('react/lib/React');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props.child;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  return this.props.child;\n};\nTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? \" Instead of passing a string like 'div', pass \" + \"React.createElement('div') or <div />.\" : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? \" Instead of passing a string like 'div', pass \" + \"React.createElement('div') or <div />.\" : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = React.createElement(TopLevelWrapper, {\n      child: nextElement\n    });\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props.child;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: hostNode._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;"]}