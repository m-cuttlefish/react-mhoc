{"version":3,"sources":["node_modules/react-dom/lib/SyntheticTouchEvent.js"],"names":["SyntheticUIEvent","require","getEventModifierState","TouchEventInterface","touches","targetTouches","changedTouches","altKey","metaKey","ctrlKey","shiftKey","getModifierState","SyntheticTouchEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","call","augmentClass","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,mBAAmBC,QAAQ,oBAAR,CAAvB;;AAEA,IAAIC,wBAAwBD,QAAQ,yBAAR,CAA5B;;AAEA;;;;AAIA,IAAIE,sBAAsB;AACxBC,WAAS,IADe;AAExBC,iBAAe,IAFS;AAGxBC,kBAAgB,IAHQ;AAIxBC,UAAQ,IAJgB;AAKxBC,WAAS,IALe;AAMxBC,WAAS,IANe;AAOxBC,YAAU,IAPc;AAQxBC,oBAAkBT;AARM,CAA1B;;AAWA;;;;;;AAMA,SAASU,mBAAT,CAA6BC,cAA7B,EAA6CC,cAA7C,EAA6DC,WAA7D,EAA0EC,iBAA1E,EAA6F;AAC3F,SAAOhB,iBAAiBiB,IAAjB,CAAsB,IAAtB,EAA4BJ,cAA5B,EAA4CC,cAA5C,EAA4DC,WAA5D,EAAyEC,iBAAzE,CAAP;AACD;;AAEDhB,iBAAiBkB,YAAjB,CAA8BN,mBAA9B,EAAmDT,mBAAnD;;AAEAgB,OAAOC,OAAP,GAAiBR,mBAAjB","file":"SyntheticTouchEvent.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;"]}