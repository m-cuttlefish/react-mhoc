{"version":3,"sources":["node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js"],"names":["ReactComponentTreeHook","require","warning","didWarnValueNull","handleElement","debugID","element","type","props","value","process","env","NODE_ENV","getStackAddendumByID","ReactDOMNullInputValuePropHook","onBeforeMountComponent","onBeforeUpdateComponent","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,yBAAyBC,QAAQ,kCAAR,CAA7B;;AAEA,IAAIC,UAAUD,QAAQ,kBAAR,CAAd;;AAEA,IAAIE,mBAAmB,KAAvB;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,OAAhC,EAAyC;AACvC,MAAIA,WAAW,IAAf,EAAqB;AACnB;AACD;AACD,MAAIA,QAAQC,IAAR,KAAiB,OAAjB,IAA4BD,QAAQC,IAAR,KAAiB,UAA7C,IAA2DD,QAAQC,IAAR,KAAiB,QAAhF,EAA0F;AACxF;AACD;AACD,MAAID,QAAQE,KAAR,IAAiB,IAAjB,IAAyBF,QAAQE,KAAR,CAAcC,KAAd,KAAwB,IAAjD,IAAyD,CAACN,gBAA9D,EAAgF;AAC9EO,YAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,QAAQ,KAAR,EAAe,8CAA8C,wEAA9C,GAAyH,gCAAxI,EAA0KI,QAAQC,IAAlL,EAAwLP,uBAAuBa,oBAAvB,CAA4CR,OAA5C,CAAxL,CAAxC,GAAwR,KAAK,CAA7R;;AAEAF,uBAAmB,IAAnB;AACD;AACF;;AAED,IAAIW,iCAAiC;AACnCC,0BAAwB,gCAAUV,OAAV,EAAmBC,OAAnB,EAA4B;AAClDF,kBAAcC,OAAd,EAAuBC,OAAvB;AACD,GAHkC;AAInCU,2BAAyB,iCAAUX,OAAV,EAAmBC,OAAnB,EAA4B;AACnDF,kBAAcC,OAAd,EAAuBC,OAAvB;AACD;AANkC,CAArC;;AASAW,OAAOC,OAAP,GAAiBJ,8BAAjB","file":"ReactDOMNullInputValuePropHook.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueNull = false;\n\nfunction handleElement(debugID, element) {\n  if (element == null) {\n    return;\n  }\n  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {\n    return;\n  }\n  if (element.props != null && element.props.value === null && !didWarnValueNull) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n\n    didWarnValueNull = true;\n  }\n}\n\nvar ReactDOMNullInputValuePropHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  }\n};\n\nmodule.exports = ReactDOMNullInputValuePropHook;"]}