{"version":3,"sources":["node_modules/react-dom/lib/setTextContent.js"],"names":["ExecutionEnvironment","require","escapeTextContentForBrowser","setInnerHTML","setTextContent","node","text","firstChild","lastChild","nodeType","nodeValue","textContent","canUseDOM","document","documentElement","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,uBAAuBC,QAAQ,+BAAR,CAA3B;AACA,IAAIC,8BAA8BD,QAAQ,+BAAR,CAAlC;AACA,IAAIE,eAAeF,QAAQ,gBAAR,CAAnB;;AAEA;;;;;;;;;;AAUA,IAAIG,iBAAiB,wBAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACzC,MAAIA,IAAJ,EAAU;AACR,QAAIC,aAAaF,KAAKE,UAAtB;;AAEA,QAAIA,cAAcA,eAAeF,KAAKG,SAAlC,IAA+CD,WAAWE,QAAX,KAAwB,CAA3E,EAA8E;AAC5EF,iBAAWG,SAAX,GAAuBJ,IAAvB;AACA;AACD;AACF;AACDD,OAAKM,WAAL,GAAmBL,IAAnB;AACD,CAVD;;AAYA,IAAIN,qBAAqBY,SAAzB,EAAoC;AAClC,MAAI,EAAE,iBAAiBC,SAASC,eAA5B,CAAJ,EAAkD;AAChDV,qBAAiB,wBAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACrC,UAAID,KAAKI,QAAL,KAAkB,CAAtB,EAAyB;AACvBJ,aAAKK,SAAL,GAAiBJ,IAAjB;AACA;AACD;AACDH,mBAAaE,IAAb,EAAmBH,4BAA4BI,IAA5B,CAAnB;AACD,KAND;AAOD;AACF;;AAEDS,OAAOC,OAAP,GAAiBZ,cAAjB","file":"setTextContent.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      if (node.nodeType === 3) {\n        node.nodeValue = text;\n        return;\n      }\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;"]}