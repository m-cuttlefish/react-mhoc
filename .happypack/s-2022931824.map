{"version":3,"sources":["node_modules/react-dom/lib/ReactDOMSelection.js"],"names":["ExecutionEnvironment","require","getNodeForCharacterOffset","getTextContentAccessor","isCollapsed","anchorNode","anchorOffset","focusNode","focusOffset","getIEOffsets","node","selection","document","selectedRange","createRange","selectedLength","text","length","fromStart","duplicate","moveToElementText","setEndPoint","startOffset","endOffset","start","end","getModernOffsets","window","getSelection","rangeCount","currentRange","getRangeAt","startContainer","nodeType","endContainer","e","isSelectionCollapsed","rangeLength","toString","tempRange","cloneRange","selectNodeContents","setEnd","isTempRangeCollapsed","detectionRange","setStart","isBackward","collapsed","setIEOffsets","offsets","range","undefined","moveStart","moveEnd","select","setModernOffsets","Math","min","extend","temp","startMarker","endMarker","offset","removeAllRanges","addRange","useIEOffsets","canUseDOM","ReactDOMSelection","getOffsets","setOffsets","module","exports"],"mappings":"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","file":"ReactDOMSelection.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;"]}