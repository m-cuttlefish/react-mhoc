{"version":3,"sources":["node_modules/fbjs/lib/memoizeStringOnly.js"],"names":["memoizeStringOnly","callback","cache","string","hasOwnProperty","call","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA;;;;AAIA,SAASA,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,MAAIC,QAAQ,EAAZ;AACA,SAAO,UAAUC,MAAV,EAAkB;AACvB,QAAI,CAACD,MAAME,cAAN,CAAqBD,MAArB,CAAL,EAAmC;AACjCD,YAAMC,MAAN,IAAgBF,SAASI,IAAT,CAAc,IAAd,EAAoBF,MAApB,CAAhB;AACD;AACD,WAAOD,MAAMC,MAAN,CAAP;AACD,GALD;AAMD;;AAEDG,OAAOC,OAAP,GAAiBP,iBAAjB","file":"memoizeStringOnly.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;"]}