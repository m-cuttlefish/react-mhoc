{"version":3,"sources":["node_modules/react-dom/lib/PooledClass.js"],"names":["_prodInvariant","require","invariant","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","length","instance","pop","call","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","standardReleaser","process","env","NODE_ENV","destructor","poolSize","push","DEFAULT_POOL_SIZE","DEFAULT_POOLER","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","PooledClass","module","exports"],"mappings":"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","file":"PooledClass.js","sourceRoot":"/Users/moyu/my-code/FECode/react-hoc","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler\n};\n\nmodule.exports = PooledClass;"]}